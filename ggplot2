#heat map for non-sequential x axis
#you input each color for the gradient
ggplot(failsdata, aes(S5.Pass.Fail, Pass.Fail, fill=YOB))+
  geom_tile()+
  scale_fill_manual(values=c("red","red3","red4","orangered","orangered3",
                             "peru","tan1","orange","darkseagreen4",
                             "darkseagreen","cadetblue3","deepskyblue","cornflowerblue","blue"))
                            
#heat map for sequential x axis
#you set high and low colors and R creates a gradient. 
ggplot(omitted, aes(S5.Pass.Fail, Pass.Fail, fill=YOB))+
  geom_tile()+
  scale_fill_gradient(low="blueviolet", high="green")

#Heat Map, R picks colors based on YOB (fill)
ggplot(data=failsdata, aes(x=Pass.Fail, y=S5.Pass.Fail))+
  geom_tile(aes(fill=YOB), high="red", low="green")
  
#scatter plot, R picks color based on YOB (fill)
ggplot(omitted, aes(y=S5.Pass.Fail, x=Pass.Fail, fill=YOB))+
  geom_point(aes(color=YOB))

#scatter plot - if Error: A continuous variable can not be mapped to shape
ggplot(omitted, aes(y=S5.Pass.Fail, x=Pass.Fail, fill=YOB))+
  geom_point(aes(color=YOB, size=3, shape=18))+
  scale_shape_identity()

#plot with Title, X, and Y axis labels
ggplot(omitted, aes(y=S5.Pass.Fail, x=Pass.Fail, fill=YOB))+
  geom_point(aes(color=YOB, size=3, shape=18))+
  scale_shape_identity()+
  ggtitle("Chip v S5 Pass/Fail + YOB")+
  xlab("Chip Pass or Fail")+
  ylab("S5 # of failures per sample")


#barplot that is "dodged" (paired) and stacked 
#color="white" is what "stacks" it
#position="dodge" is what pairs it
ggplot(omitted, aes(y=S5.Pass.Fail, x=YOB, fill=Pass.Fail))+
  geom_bar(stat="identity", color="white", position="dodge")

#same as above, but with the x axis split into seperate charts
ggplot(omitted, aes(y=S5.Pass.Fail, x=YOB, fill=Pass.Fail))+
  geom_bar(stat="identity", color="white", position="dodge")+
  facet_wrap(~YOB)
  
theme_light()

#colors changed if greater than
ggplot(data, aes(y=di, x=bp))+
  geom_point(color=ifelse(data$di > 10,"red","dodgerblue4"))+
  theme_light()

#line plot, lines coloored by grouping. With title
ggplot(data, aes(x=Pop.name, y=Fis.Pop, group=Locus.name1))+
  geom_line(aes(color=Locus.name1))+
  ggtitle("Fis of Offspring from 2010-2015")+
  theme_light()

#line plot with seperate data points for dams and sires. Colored by locus, size and shape chosen. 
ggplot(data, aes(x=Pop.name, y=Het.exp, group=Locus.name1))+
  geom_line(aes(color=Locus.name1))+
  ggtitle("MSA - Exp Het of all from 2010-2015")+
  theme_light()+
  geom_point((aes(x=X1Pop.name, y = X1Het.exp,group=X1Locus.name1,color=X1Locus.name1, shape=17, size=2.5)))+
  scale_shape_identity()+
  geom_line((aes(x=X1Pop.name,y=X1Het.exp,color=X1Locus.name1, linetype="dotted", size=1.05)))+
  scale_linetype_identity()+
  scale_size_identity()


#bar/col chart - grouped - colored by group
ggplot(data, aes(x=Locus.name1, y=Het.exp, group=Pop.name, fill=Pop.name))+
  geom_bar(stat="identity",position = position_dodge(width=.9))+
  scale_fill_manual(values=c("green", "yellow", "orange","black"))
  
#organize bar/col chart
data$Pop.name<- factor(data$Pop.name, levels=c("top40","mid28","bottom32","allsires"))
  
#for MSA-Exp Het of all - Sires Grouped graph
ggplot(alldata, aes(x=Pop.name, y=Het.exp, group=Locus.name1))+
  ggtitle("MSA - Exp Het of all - Sires Grouped")+
  theme_light()+
  geom_point((aes(x=Pop.name, y = Het.exp,group=Locus.name1,color=Locus.name1, size=3)))+
  geom_point(aes(x=Pop.name.1, y=Het.exp.1, group=Locus.name1.1), size=3)+
  scale_shape_identity()+
  geom_line((aes(x=Pop.name,y=Het.exp,color=Locus.name1, linetype="solid")))+
  scale_linetype_identity()+
  scale_size_identity()+
  scale_x_discrete(limits=c("offspring","Dams","allsires","top40","mid28","bottom32"))
  
  
#Figure 3 - Average Fis with SE Bars
    ggplot(data2)+
      geom_point(aes(x=Pop.name2,y=Avg.Fis, size=7))+
      ggtitle("Figure 3 - Average Fis in USTA Trotters from 2010-2015 with Standard Error Bars")+
      geom_errorbar(aes(x=Pop.name2,ymin=Avg.Fis-SE.Fis,ymax=Avg.Fis+SE.Fis))+
      scale_linetype_identity()+
      scale_size_identity()+
      theme_light()+
      scale_x_discrete(limits=c("Offspring of Most Prolific Sires","Offspring of Middle Sires","Offspring of Bottom Sires","All Offspring","Dams","All Sires"), 
                       labels=function(x)str_wrap(x,width=20))+
      xlab("Group")+
      ylab("Average Fis")
    
#Figure 1 - Average Allele Count with SE Bars
    ggplot(data)+
      geom_point(aes(x=Pop.name2,y=Avg..Alleles, size=7))+
      ggtitle("Figure 1 - Average Allele Count in USTA Trotters from 2010-2015 with Standard Error Bars")+
      geom_errorbar(aes(x=Pop.name2,ymin=Avg..Alleles-SE.alleles,ymax=Avg..Alleles+SE.alleles))+
      scale_linetype_identity()+
      scale_size_identity()+
      theme_light()+
      scale_x_discrete(limits=c("Offspring of Most Prolific Sires","Offspring of Middle Sires","Offspring of Bottom Sires","All Offspring","Dams","All Sires","Most Prolific Sires",
                                "Middle Sires","Bottom Sires"),
                       labels=function(x)str_wrap(x,width=20))+
      xlab("Group")+
      ylab("Average Allele Count")
    
#Figure 2 - Average Exp Het - Still can't get average on legend, but did change name of legend
   ggplot(read3b)+
      geom_point(aes(x=Pop.name, y=Het.exp, group=Locus.name1, color=Locus.name1, size=2.5))+
      geom_point(aes(x=Pop.name2,y=Avg..Exp.Het, size=3, shape=17))+
      geom_line(aes(x=Pop.name, y=Het.exp, group=Locus.name1, color=Locus.name1,linetype="dashed"))+
      scale_linetype_identity()+
      scale_shape_identity()+
      scale_size_identity()+
      theme_light()+
      scale_x_discrete(limits=c("2010 Offspring","2011 Offspring","2012 Offspring","2013 Offspring","2014 Offspring","2015 Offspring",
                                "All Offspring","Dams","All Sires","Most Prolific Sires","Middle Sires","Bottom Sires"),
                       labels=function(x)str_wrap(x,width=10))+
      ggtitle("Figure 2 - Expected Heterozygosity of USTA Trotters from 2010-2015")+
      xlab("Group")+
      ylab("Expected Heterozygosity")+
      labs(color="Marker", subtitle="Test")
